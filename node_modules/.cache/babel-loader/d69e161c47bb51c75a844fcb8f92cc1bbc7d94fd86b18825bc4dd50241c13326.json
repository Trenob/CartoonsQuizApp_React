{"ast":null,"code":"var _jsxFileName = \"/Users/trevon/Desktop/ECPI/CIS453_Lab/cartoonsquizapp 2/CartoonsQuizApp_React/src/Button.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { globals } from './Global';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  id,\n  textToDisplay,\n  startQuiz\n}) => {\n  _s();\n  var [bgColor, setBackgroundColor] = useState('darkkhaki');\n  var [isClicked, setIsClicked] = useState(false);\n\n  //Controls button highlight enter\n  const handleMouseEnter = e => {\n    //change button color if \n    if (e.type === 'mouseenter') {\n      setBackgroundColor('#3498db');\n    } else if (e.target.isClicked) {\n      //do nothing\n    }\n  };\n\n  //Controls button highlight leave\n  const handleMouseLeave = e => {\n    //change button color\n    if (!e.target.isClicked) {\n      if (e.type === 'mouseleave' && e.target.style.backgroundColor !== '#3498db') {\n        setBackgroundColor('darkkhaki');\n      }\n    } else if (e.target.isClicked) {\n      //do nothing\n    }\n  };\n\n  //Hides and unhides the game option configurations\n  const toggleOptionsOnAndOff = () => {\n    if (globals.gameIsActive === false) {\n      if (document.querySelector(\"#root > div > section.GameConfigurations\").style.display === \"none\") {\n        document.querySelector(\"#root > div > section.GameConfigurations\").style.display = \"block\";\n      } else {\n        document.querySelector(\"#root > div > section.GameConfigurations\").style.display = \"none\";\n      }\n    } else if (globals.gameIsActive === true) {\n      alert(\"Please quit or finish your game to configure the next game's options!\");\n    }\n  };\n\n  //starts the game!\n  function startGame(playerMode, quizTime, quizQuestions) {\n    alert('starting the game!');\n\n    //change global variable to true to disable opening config options after game has begun\n    globals.gameIsActive = true;\n\n    //close config options if they are still open\n    document.querySelector(\"#root > div > section.GameConfigurations\").style.display = \"none\";\n    document.querySelector(\"#root > div > section.QuizQuestionContainer\").style.display = \"block\";\n    document.querySelector(\"#root > div > section:nth-child(6) > div.quizSubmission\").style.display = \"block\";\n\n    //2nd: set game to active\n  }\n  function getGameValues() {\n    if (document.querySelector(\"#root > div > section.GameConfigurations\").style.display === \"none\") {\n      //use default values\n      globals.gameVal_playerMode = 1;\n      globals.gameVal_timeLimit = 60;\n      globals.gameVal_quizQuestions = 10;\n    } else {\n      //quiz questions\n      globals.gameVal_quizQuestions = document.querySelector(\"#questionNum\").value;\n\n      //get player mode\n      if (document.querySelector(\"#\\\\33 \").isClicked === true) {\n        globals.gameVal_playerMode = 1;\n      } else if (document.querySelector(\"#\\\\34 \").isClicked === true) {\n        globals.gameVal_playerMode = 2;\n      }\n\n      //get time limit per questions\n      if (document.querySelector(\"#\\\\35 \").style.backgroundColor === 'chartreuse') {\n        globals.gameVal_timeLimit = 30;\n      } else if (document.querySelector(\"#\\\\36 \").style.backgroundColor === 'chartreuse') {\n        globals.gameVal_timeLimit = 60;\n      } else if (document.querySelector(\"#\\\\37 \").style.backgroundColor === 'chartreuse') {\n        globals.gameVal_timeLimit = 90;\n      }\n    }\n  }\n\n  //abandoned playerNames function\n  function setPlayerNames(buttonsText) {\n    if (buttonsText === 'Single') {\n      //hide player two div\n      document.querySelector(\"#playerTwo\").style.display = 'none';\n      //document.querySelector(\"#playerOne > p\").innerHTML = 'Player One\\'s Name:';\n    } else if (buttonsText === 'Versus') {\n      //show player two div\n      document.querySelector(\"#playerTwo\").style.display = '';\n      //document.querySelector(\"#playerTwo > p\").innerHTML = 'Player Two\\'s Name:';\n    }\n  }\n\n  ///handles clicks\n  const handleMouseClicks = e => {\n    var buttonsText = e.target.innerText;\n    switch (buttonsText) {\n      case 'Configure game options':\n        toggleOptionsOnAndOff();\n        break;\n      case 'Start Quiz':\n        //only allow if a game is not currently active\n        if (!globals.gameIsActive) {\n          getGameValues();\n\n          //callback\n          if (startQuiz) {\n            startQuiz();\n          }\n\n          // start the game\n          startGame(globals.gameVal_playerMode, globals.gameVal_timeLimit, globals.gameVal_quizQuestions);\n        } else {\n          alert('Please finish your current game! Hurry time is ticking!');\n        }\n        break;\n      case 'Single':\n        //show player one div\n        //setPlayerNames(buttonsText);\n\n        if (!e.target.isClicked) {\n          //set this button to green indicating to user it is clicked\n          document.querySelector(\"#\\\\33 \").style.backgroundColor = 'chartreuse';\n\n          //set button to clicked\n          document.querySelector(\"#\\\\33 \").isClicked = true;\n\n          //set Versus button to not clicked and change color back\n          document.querySelector(\"#\\\\34 \").isClicked = false;\n          document.querySelector(\"#\\\\34 \").style.backgroundColor = 'darkkhaki';\n        } else if (e.target.isClicked) {\n          //button is already clicked, so change back to false and change color back\n          document.querySelector(\"#\\\\33 \").isClicked = false;\n          document.querySelector(\"#\\\\33 \").style.backgroundColor = 'darkkhaki';\n\n          //set Versus button to clicked and highlight color back\n          document.querySelector(\"#\\\\34 \").isClicked = true;\n          document.querySelector(\"#\\\\34 \").style.backgroundColor = 'chartreuse';\n        }\n        break;\n      case 'Versus':\n        //show player one div\n        //setPlayerNames(buttonsText);\n\n        if (!e.target.isClicked) {\n          //set this button to green indicating to user it is clicked\n          document.querySelector(\"#\\\\34 \").style.backgroundColor = 'chartreuse';\n\n          //set button to clicked\n          document.querySelector(\"#\\\\34 \").isClicked = true;\n\n          //set Versus button to not clicked and change color back\n          document.querySelector(\"#\\\\33 \").isClicked = false;\n          document.querySelector(\"#\\\\33 \").style.backgroundColor = 'darkkhaki';\n        } else if (e.target.isClicked) {\n          //button is already clicked, so change back to false and change color back\n          document.querySelector(\"#\\\\34 \").isClicked = false;\n          document.querySelector(\"#\\\\34 \").style.backgroundColor = 'darkkhaki';\n\n          //set Single button to clicked and highlight color back\n          document.querySelector(\"#\\\\33 \").isClicked = true;\n          document.querySelector(\"#\\\\33 \").style.backgroundColor = 'chartreuse';\n        }\n        break;\n      case '30':\n        document.querySelector(\"#\\\\35 \").isClicked = true;\n        document.querySelector(\"#\\\\35 \").style.backgroundColor = 'chartreuse';\n\n        //turn other button selections off\n        document.querySelector(\"#\\\\36 \").isClicked = false;\n        document.querySelector(\"#\\\\36 \").style.backgroundColor = 'darkkhaki';\n        document.querySelector(\"#\\\\37 \").isClicked = false;\n        document.querySelector(\"#\\\\37 \").style.backgroundColor = 'darkkhaki';\n        break;\n      case '60':\n        document.querySelector(\"#\\\\36 \").isClicked = true;\n        document.querySelector(\"#\\\\36 \").style.backgroundColor = 'chartreuse';\n\n        //turn other button selections off\n        document.querySelector(\"#\\\\35 \").isClicked = false;\n        document.querySelector(\"#\\\\35 \").style.backgroundColor = 'darkkhaki';\n        document.querySelector(\"#\\\\37 \").isClicked = false;\n        document.querySelector(\"#\\\\37 \").style.backgroundColor = 'darkkhaki';\n        break;\n      case '90':\n        document.querySelector(\"#\\\\37 \").isClicked = true;\n        document.querySelector(\"#\\\\37 \").style.backgroundColor = 'chartreuse';\n\n        //turn other button selections off\n        document.querySelector(\"#\\\\35 \").isClicked = false;\n        document.querySelector(\"#\\\\35 \").style.backgroundColor = 'darkkhaki';\n        document.querySelector(\"#\\\\36 \").isClicked = false;\n        document.querySelector(\"#\\\\36 \").style.backgroundColor = 'darkkhaki';\n        break;\n      default:\n      //\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: id,\n    isClicked: isClicked,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleMouseClicks,\n    startQuiz: startQuiz,\n    style: {\n      backgroundColor: bgColor || undefined\n    },\n    children: textToDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 9\n  }, this);\n};\n_s(Button, \"4zGRxbdngMQfinFb1qRZilK0PWc=\");\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","useState","globals","jsxDEV","_jsxDEV","Button","id","textToDisplay","startQuiz","_s","bgColor","setBackgroundColor","isClicked","setIsClicked","handleMouseEnter","e","type","target","handleMouseLeave","style","backgroundColor","toggleOptionsOnAndOff","gameIsActive","document","querySelector","display","alert","startGame","playerMode","quizTime","quizQuestions","getGameValues","gameVal_playerMode","gameVal_timeLimit","gameVal_quizQuestions","value","setPlayerNames","buttonsText","handleMouseClicks","innerText","onMouseEnter","onMouseLeave","onClick","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trevon/Desktop/ECPI/CIS453_Lab/cartoonsquizapp 2/CartoonsQuizApp_React/src/Button.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { globals } from './Global';\nimport './App.css';\n\nconst Button = ({ id, textToDisplay, startQuiz }) => {\n\n    var [bgColor, setBackgroundColor] = useState('darkkhaki');\n    var [isClicked, setIsClicked] = useState(false);\n\n    //Controls button highlight enter\n    const handleMouseEnter = (e) => {\n\n        //change button color if \n        if (e.type === 'mouseenter') {\n            setBackgroundColor('#3498db');\n        } else if (e.target.isClicked) {\n            //do nothing\n        }\n    }\n\n    //Controls button highlight leave\n    const handleMouseLeave = (e) => {\n\n        //change button color\n        if (!e.target.isClicked) {\n            if (e.type === 'mouseleave'\n                && e.target.style.backgroundColor !== '#3498db') {\n                setBackgroundColor('darkkhaki');\n            }\n        } else if (e.target.isClicked) {\n            //do nothing\n        }\n    }\n\n    //Hides and unhides the game option configurations\n    const toggleOptionsOnAndOff = () => {\n        if (globals.gameIsActive === false) {\n\n            if (document.querySelector(\"#root > div > section.GameConfigurations\").style.display === \"none\") {\n                document.querySelector(\"#root > div > section.GameConfigurations\").style.display = \"block\";\n            }\n            else {\n                document.querySelector(\"#root > div > section.GameConfigurations\").style.display = \"none\";\n            }\n        }\n        else if (globals.gameIsActive === true) {\n            alert(\"Please quit or finish your game to configure the next game's options!\")\n        }\n    }\n\n    //starts the game!\n    function startGame(playerMode, quizTime, quizQuestions) {\n\n        alert('starting the game!');\n\n        //change global variable to true to disable opening config options after game has begun\n        globals.gameIsActive = true;\n\n        //close config options if they are still open\n        document.querySelector(\"#root > div > section.GameConfigurations\").style.display = \"none\";\n\n        document.querySelector(\"#root > div > section.QuizQuestionContainer\").style.display = \"block\";\n\n        document.querySelector(\"#root > div > section:nth-child(6) > div.quizSubmission\").style.display = \"block\";\n\n\n        //2nd: set game to active\n    }\n\n    function getGameValues() {\n\n        if (document.querySelector(\"#root > div > section.GameConfigurations\").style.display === \"none\") {\n            //use default values\n            globals.gameVal_playerMode = 1;\n            globals.gameVal_timeLimit = 60;\n            globals.gameVal_quizQuestions = 10;\n        }\n        else {\n            //quiz questions\n            globals.gameVal_quizQuestions = document.querySelector(\"#questionNum\").value;\n\n            //get player mode\n            if (document.querySelector(\"#\\\\33 \").isClicked === true) {\n                globals.gameVal_playerMode = 1;\n            }\n            else if (document.querySelector(\"#\\\\34 \").isClicked === true) {\n                globals.gameVal_playerMode = 2;\n            }\n\n            //get time limit per questions\n            if (document.querySelector(\"#\\\\35 \").style.backgroundColor === 'chartreuse') {\n                globals.gameVal_timeLimit = 30;\n            }\n            else if (document.querySelector(\"#\\\\36 \").style.backgroundColor === 'chartreuse') {\n                globals.gameVal_timeLimit = 60;\n            }\n            else if (document.querySelector(\"#\\\\37 \").style.backgroundColor === 'chartreuse') {\n                globals.gameVal_timeLimit = 90;\n            }\n        }\n    }\n\n    //abandoned playerNames function\n    function setPlayerNames(buttonsText) {\n\n        if (buttonsText === 'Single') {\n            //hide player two div\n            document.querySelector(\"#playerTwo\").style.display = 'none';\n            //document.querySelector(\"#playerOne > p\").innerHTML = 'Player One\\'s Name:';\n        }\n        else if (buttonsText === 'Versus') {\n            //show player two div\n            document.querySelector(\"#playerTwo\").style.display = '';\n            //document.querySelector(\"#playerTwo > p\").innerHTML = 'Player Two\\'s Name:';\n        }\n\n    }\n\n    ///handles clicks\n    const handleMouseClicks = (e) => {\n        var buttonsText = e.target.innerText;\n\n        switch (buttonsText) {\n            case 'Configure game options':\n                toggleOptionsOnAndOff();\n                break;\n\n            case 'Start Quiz':\n                //only allow if a game is not currently active\n                if (!globals.gameIsActive) {\n                    getGameValues();\n\n                    //callback\n                    if (startQuiz) {\n                        startQuiz();\n                    }\n\n                    // start the game\n                    startGame(globals.gameVal_playerMode, globals.gameVal_timeLimit, globals.gameVal_quizQuestions);\n                }\n                else {\n                    alert('Please finish your current game! Hurry time is ticking!');\n                }\n                break;\n\n            case 'Single':\n\n                //show player one div\n                //setPlayerNames(buttonsText);\n\n                if (!e.target.isClicked) {\n                    //set this button to green indicating to user it is clicked\n                    document.querySelector(\"#\\\\33 \").style.backgroundColor = 'chartreuse';\n\n                    //set button to clicked\n                    document.querySelector(\"#\\\\33 \").isClicked = true;\n\n                    //set Versus button to not clicked and change color back\n                    document.querySelector(\"#\\\\34 \").isClicked = false;\n                    document.querySelector(\"#\\\\34 \").style.backgroundColor = 'darkkhaki';\n                }\n                else if (e.target.isClicked) {\n                    //button is already clicked, so change back to false and change color back\n                    document.querySelector(\"#\\\\33 \").isClicked = false;\n                    document.querySelector(\"#\\\\33 \").style.backgroundColor = 'darkkhaki';\n\n                    //set Versus button to clicked and highlight color back\n                    document.querySelector(\"#\\\\34 \").isClicked = true;\n                    document.querySelector(\"#\\\\34 \").style.backgroundColor = 'chartreuse';\n                }\n\n                break;\n\n            case 'Versus':\n\n                //show player one div\n                //setPlayerNames(buttonsText);\n\n                if (!e.target.isClicked) {\n                    //set this button to green indicating to user it is clicked\n                    document.querySelector(\"#\\\\34 \").style.backgroundColor = 'chartreuse';\n\n                    //set button to clicked\n                    document.querySelector(\"#\\\\34 \").isClicked = true;\n\n                    //set Versus button to not clicked and change color back\n                    document.querySelector(\"#\\\\33 \").isClicked = false;\n                    document.querySelector(\"#\\\\33 \").style.backgroundColor = 'darkkhaki';\n                }\n                else if (e.target.isClicked) {\n                    //button is already clicked, so change back to false and change color back\n                    document.querySelector(\"#\\\\34 \").isClicked = false;\n                    document.querySelector(\"#\\\\34 \").style.backgroundColor = 'darkkhaki';\n\n                    //set Single button to clicked and highlight color back\n                    document.querySelector(\"#\\\\33 \").isClicked = true;\n                    document.querySelector(\"#\\\\33 \").style.backgroundColor = 'chartreuse';\n                }\n\n                break;\n\n            case '30':\n                document.querySelector(\"#\\\\35 \").isClicked = true;\n                document.querySelector(\"#\\\\35 \").style.backgroundColor = 'chartreuse';\n\n                //turn other button selections off\n                document.querySelector(\"#\\\\36 \").isClicked = false;\n                document.querySelector(\"#\\\\36 \").style.backgroundColor = 'darkkhaki';\n                document.querySelector(\"#\\\\37 \").isClicked = false;\n                document.querySelector(\"#\\\\37 \").style.backgroundColor = 'darkkhaki';\n\n                break;\n\n            case '60':\n                document.querySelector(\"#\\\\36 \").isClicked = true;\n                document.querySelector(\"#\\\\36 \").style.backgroundColor = 'chartreuse';\n\n                //turn other button selections off\n                document.querySelector(\"#\\\\35 \").isClicked = false;\n                document.querySelector(\"#\\\\35 \").style.backgroundColor = 'darkkhaki';\n                document.querySelector(\"#\\\\37 \").isClicked = false;\n                document.querySelector(\"#\\\\37 \").style.backgroundColor = 'darkkhaki';\n                break;\n\n            case '90':\n                document.querySelector(\"#\\\\37 \").isClicked = true;\n                document.querySelector(\"#\\\\37 \").style.backgroundColor = 'chartreuse';\n\n                //turn other button selections off\n                document.querySelector(\"#\\\\35 \").isClicked = false;\n                document.querySelector(\"#\\\\35 \").style.backgroundColor = 'darkkhaki';\n                document.querySelector(\"#\\\\36 \").isClicked = false;\n                document.querySelector(\"#\\\\36 \").style.backgroundColor = 'darkkhaki';\n                break;\n\n            default:\n            //\n        }\n    }\n\n\n    return (\n        <button\n            id={id}\n            isClicked={isClicked}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleMouseClicks}\n            startQuiz={startQuiz}\n            style={{ backgroundColor: bgColor || undefined }}>\n            {textToDisplay}\n        </button>\n    );\n};\n\nexport default Button;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}