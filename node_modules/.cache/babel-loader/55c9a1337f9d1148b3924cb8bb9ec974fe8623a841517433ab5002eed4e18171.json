{"ast":null,"code":"var _jsxFileName = \"/Users/trevon/Desktop/ECPI/CIS453_Lab/cartoonsquizapp 2/CartoonsQuizApp_React/src/QuestionCard.js\";\nimport React, { useState } from \"react\";\nimport Image from './ConnectToPublicImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = ({\n  Network,\n  Show\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      Network: Network,\n      Show: Show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-choices\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-question\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"This is the question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ques1\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Question text number one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ques2\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Question text number one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ques3\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Question text number one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ques4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Question text number one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"bonusQues\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useState","Image","jsxDEV","_jsxDEV","QuestionCard","Network","Show","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","_c","$RefreshReg$"],"sources":["/Users/trevon/Desktop/ECPI/CIS453_Lab/cartoonsquizapp 2/CartoonsQuizApp_React/src/QuestionCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Image from './ConnectToPublicImages'\n\n\nconst QuestionCard = ({Network, Show}) => {\n\n    return (\n        <div className=\"card\">\n            <Image Network={Network} Show={Show}/>\n\n            {/* Ideally you'd want to make a database call here to look grab questions for the random question chosen among all the questions within the shows' table */}\n\n            <div className=\"card-choices\">\n                \n                <div>\n                <div className=\"card-question\">\n                    <h4>This is the question</h4>\n                </div>\n\n                <div id=\"ques1\">\n                    <p>Question text number one</p>\n                </div>\n                <div id=\"ques2\">\n                    <p>Question text number one</p>\n                </div>\n                <div id=\"ques3\">\n                    <p>Question text number one</p>\n                </div>\n                <div id=\"ques4\">\n                    <p>Question text number one</p>\n                </div>\n\n                <div id=\"bonusQues\" > {/*style={{ display: \"none\" }} */}\n                    <input type=\"text\"></input>\n                </div>\n                </div>\n\n                \n            </div>\n        </div>\n    );\n}\n\nexport default QuestionCard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,YAAY,GAAGA,CAAC;EAACC,OAAO;EAAEC;AAAI,CAAC,KAAK;EAEtC,oBACIH,OAAA;IAAKI,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBL,OAAA,CAACF,KAAK;MAACI,OAAO,EAAEA,OAAQ;MAACC,IAAI,EAAEA;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAItCT,OAAA;MAAKI,SAAS,EAAC,cAAc;MAAAC,QAAA,eAEzBL,OAAA;QAAAK,QAAA,gBACAL,OAAA;UAAKI,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC1BL,OAAA;YAAAK,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eAENT,OAAA;UAAKU,EAAE,EAAC,OAAO;UAAAL,QAAA,eACXL,OAAA;YAAAK,QAAA,EAAG;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACNT,OAAA;UAAKU,EAAE,EAAC,OAAO;UAAAL,QAAA,eACXL,OAAA;YAAAK,QAAA,EAAG;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACNT,OAAA;UAAKU,EAAE,EAAC,OAAO;UAAAL,QAAA,eACXL,OAAA;YAAAK,QAAA,EAAG;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACNT,OAAA;UAAKU,EAAE,EAAC,OAAO;UAAAL,QAAA,eACXL,OAAA;YAAAK,QAAA,EAAG;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAENT,OAAA;UAAKU,EAAE,EAAC,WAAW;UAAAL,QAAA,GAAE,GAAC,eAClBL,OAAA;YAAOW,IAAI,EAAC;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAG,EAAA,GArCKX,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}