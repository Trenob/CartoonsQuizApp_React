{"ast":null,"code":"var _jsxFileName = \"/Users/trevon/Desktop/ECPI/CIS453_Lab/cartoonsquizapp 2/CartoonsQuizApp_React/src/QuestionCard.js\";\nimport React, { useState } from \"react\";\nimport Image from './ConnectToPublicImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = ({\n  Network,\n  Show,\n  Question,\n  OptOne,\n  OptTwo,\n  OptThree\n}) => {\n  function getShow() {\n    return Show;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      Network: Network,\n      Show: Show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-choices\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-question\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: Question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"card-answers\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"opt1\",\n          name: \"question\",\n          value: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"opt1\",\n          children: OptOne\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"opt2\",\n          name: \"question\",\n          value: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"opt2\",\n          children: OptTwo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"opt3\",\n          name: \"question\",\n          value: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"opt3\",\n          children: OptThree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useState","Image","jsxDEV","_jsxDEV","QuestionCard","Network","Show","Question","OptOne","OptTwo","OptThree","getShow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","for","_c","$RefreshReg$"],"sources":["/Users/trevon/Desktop/ECPI/CIS453_Lab/cartoonsquizapp 2/CartoonsQuizApp_React/src/QuestionCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Image from './ConnectToPublicImages'\n\n\nconst QuestionCard = ({ Network, Show, Question, OptOne, OptTwo, OptThree }) => {\n\n    function getShow () {\n        return Show;\n    }\n\n    return (\n        <div className=\"card\">\n            <Image Network={Network} Show={Show} />\n\n            {/* Ideally you'd want to make a database call here to look grab questions for the random question chosen among all the questions within the shows' table */}\n\n            <div className=\"card-choices\">\n\n                <div className=\"card-question\">\n                    <h4>{Question}</h4>\n                </div>\n\n                <form className=\"card-answers\">\n                    <input type=\"radio\" id=\"opt1\" name=\"question\" value=\"1\" />\n                    <label for=\"opt1\">{OptOne}</label><br />\n\n                    <input type=\"radio\" id=\"opt2\" name=\"question\" value=\"2\" />\n                    <label for=\"opt2\">{OptTwo}</label><br />\n\n                    <input type=\"radio\" id=\"opt3\" name=\"question\" value=\"3\" />\n                    <label for=\"opt3\">{OptThree}</label>\n                </form>\n\n                {/* \n                <div>\n                    Previous code \n                    <div className=\"card-question\">\n                        <h4>This is the question</h4>\n                    </div>\n\n                    <div id=\"ques1\">\n                        <p>Question text number one</p>\n                    </div>\n                    <div id=\"ques2\">\n                        <p>Question text number one</p>\n                    </div>\n                    <div id=\"ques3\">\n                        <p>Question text number one</p>\n                    </div>\n                    <div id=\"ques4\">\n                        <p>Question text number one</p>\n                    </div>\n\n                    <div id=\"bonusQues\" > {/*style={{ display: \"none\" }} \n                    <input type=\"text\"></input>\n                </div> \n\n                </div> */}\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default QuestionCard;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAE5E,SAASC,OAAOA,CAAA,EAAI;IAChB,OAAOL,IAAI;EACf;EAEA,oBACIH,OAAA;IAAKS,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBV,OAAA,CAACF,KAAK;MAACI,OAAO,EAAEA,OAAQ;MAACC,IAAI,EAAEA;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAIvCd,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAEzBV,OAAA;QAAKS,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC1BV,OAAA;UAAAU,QAAA,EAAKN;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAENd,OAAA;QAAMS,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC1BV,OAAA;UAAOe,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,KAAK,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1Dd,OAAA;UAAOmB,GAAG,EAAC,MAAM;UAAAT,QAAA,EAAEL;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAd,OAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAExCd,OAAA;UAAOe,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,KAAK,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1Dd,OAAA;UAAOmB,GAAG,EAAC,MAAM;UAAAT,QAAA,EAAEJ;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAd,OAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAExCd,OAAA;UAAOe,IAAI,EAAC,OAAO;UAACC,EAAE,EAAC,MAAM;UAACC,IAAI,EAAC,UAAU;UAACC,KAAK,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1Dd,OAAA;UAAOmB,GAAG,EAAC,MAAM;UAAAT,QAAA,EAAEH;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA6BN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAM,EAAA,GA3DKnB,YAAY;AA6DlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}